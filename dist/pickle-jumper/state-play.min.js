"use strict";!function(){var t=window.pickleJumper=window.pickleJumper||{};t.states=t.states||{},t.states.Play=function(){Phaser.State.call(this)},t.states.Play.prototype=Object.create(Phaser.State.prototype),t.states.Play.prototype.constructor=t.states.Game,_.extend(t.states.Play.prototype,Phaser.State.prototype,{preload:function(){this.game.load.atlas("play-sprites","assets/determined-dill-sprites.png","assets/determined-dill-sprites.json")},create:function(){this.game.stage.backgroundColor="#b8f4bc",this.platformSpaceY=110,this.platformGapMax=200,this.hoverChance=.3,this.coinChance=.3,this.boostChance=.3,this.botChance=.1,this.scoreCoin=100,this.scoreBoost=300,this.scoreBot=500,this.resetViewTracking(),this.game.scale.scaleMode=Phaser.ScaleManager.SHOW_ALL,this.game.scale.maxWidth=this.game.width,this.game.scale.maxHeight=this.game.height,this.game.scale.pageAlignHorizontally=!0,this.game.scale.pageAlignVertically=!0,this.game.physics.startSystem(Phaser.Physics.ARCADE),this.game.physics.arcade.gravity.y=1e3,this.startY=this.game.height-5,this.hero=new t.prefabs.Hero(this.game,0,0),this.hero.resetPlacement(.5*this.game.width,this.startY-this.hero.height),this.game.add.existing(this.hero),this.coins=this.game.add.group(),this.boosts=this.game.add.group(),this.bots=this.game.add.group(),this.addPlatforms(),this.resetScore(),this.updateScore(),this.cursors=this.game.input.keyboard.createCursorKeys(),this.actionButton=this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR)},update:function(){this.world.setBounds(0,-this.hero.yChange,this.game.world.width,this.game.height+this.hero.yChange),this.cameraYMin=Math.min(this.cameraYMin,this.hero.y-this.game.height/2),this.camera.y=this.cameraYMin,this.hero.y>this.cameraYMin+this.game.height+200&&this.gameOver(),this.hero.body.velocity.x=this.cursors.left.isDown?-(this.game.physics.arcade.gravity.y/5):this.cursors.right.isDown?this.game.physics.arcade.gravity.y/5:0,this.game.physics.arcade.collide(this.hero,this.platforms,this.updateHeroPlatform,null,this),this.game.physics.arcade.collide(this.hero,this.base,this.updateHeroPlatform,null,this),this.game.physics.arcade.overlap(this.hero,this.coins,function(t,s){s.kill(),this.updateScore(this.scoreCoin)},null,this),this.game.physics.arcade.overlap(this.hero,this.boosts,function(t,s){s.kill(),this.updateScore(this.scoreBoost),t.body.velocity.y=-1*this.game.physics.arcade.gravity.y*1.5},null,this),this.game.physics.arcade.collide(this.hero,this.bots,function(t,s){t.body.touching.down?(s.kill(),this.updateScore(this.scoreBot),t.body.velocity.y=-1*this.game.physics.arcade.gravity.y*.5):this.gameOver()},null,this),this.platforms.forEachAlive(function(t){var s;this.platformYMin=Math.min(this.platformYMin,t.y),t.y>this.camera.y+this.game.height&&(t.kill(),s=this.platforms.getFirstDead(),this.placePlatform(this.platforms.getFirstDead(),this.platforms.getTop()))},this),["coins","boosts","bots"].forEach(_.bind(function(t){this[t].forEachAlive(function(t){t.y>this.camera.y+this.game.height&&t.kill()},this)},this)),this.updateScore()},updateHeroPlatform:function(t){t.body.velocity.y=-1*this.game.physics.arcade.gravity.y*.7},shutdown:function(){this.world.setBounds(0,0,this.game.width,this.game.height),this.cursor=null,this.resetViewTracking(),this.resetScore(),["hero","platforms","coins","boosts","scoreText"].forEach(_.bind(function(t){this[t].destroy(),this[t]=null},this))},gameOver:function(){this.game.pickle.score=this.score,this.game.state.start("gameover")},addPlatforms:function(){this.platforms=this.game.add.group(),this.base=new t.prefabs.Platform(this.game,.5*this.game.width,this.startY,2*this.game.width),this.game.add.existing(this.base);var s;_.each(_.range(20),_.bind(function(i){var e=new t.prefabs.Platform(this.game,0,0);this.placePlatform(e,s,this.world.height-this.platformSpaceY-this.platformSpaceY*i),this.platforms.add(e),s=e},this))},placePlatform:function(t,s,i){t.resetSettings();var e=i||this.platformYMin-this.platformSpaceY,h=t.minX,a=t.maxX,o=this.rnd.integerInRange(h,a);s&&(o=this.rnd.integerInRange(s.x-this.platformGapMax,s.x+this.platformGapMax),o=0>o?Math.min(a,this.world.width+o):Math.max(o,h),o=o>this.world.width?Math.max(h,o-this.world.width):Math.min(o,a)),t.reset(o,e),this.fluffPlatform(t)},fluffPlatform:function(t){var s=t.x,i=t.y-t.height/2-30;Math.random()<=this.hoverChance?t.hover=!0:Math.random()<=this.coinChance?this.addWithPool(this.coins,"Coin",s,i):Math.random()<=this.boostChance?this.addWithPool(this.boosts,"Boost",s,i):Math.random()<=this.botChance&&this.addWithPool(this.bots,"Botulism",s,i)},addWithPool:function(s,i,e,h){var a=s.getFirstDead();a=a||new t.prefabs[i](this.game,e,h),a.resetPlacement?a.resetPlacement(e,h):a.reset(e,h),s.add(a)},updateScore:function(t){t=t||0,this.scoreUp=-this.cameraYMin>=9999999?0:Math.min(Math.max(0,-this.cameraYMin),9999998),this.scoreCollect=(this.scoreCollect||0)+t,this.score=Math.round(this.scoreUp+this.scoreCollect),this.scoreText?this.scoreText.text="Score: "+this.score:(this.scoreText=this.game.add.text(10,this.game.height-10,"Score: "+this.score,{font:"bold "+this.game.world.height/25+"px Arial",fill:"#fff",align:"center"}),this.scoreText.anchor.set(0,1),this.scoreText.fixedToCamera=!0,this.scoreText.cameraOffset.setTo(10,this.game.height-10))},resetScore:function(){this.scoreUp=0,this.scoreCollect=0,this.score=0},resetViewTracking:function(){this.cameraYMin=9999999,this.platformYMin=9999999},isTouching:function(t){return t&&t.touch?t.touching.up||t.touching.down||t.touching.left||t.touching.right:!1}})}();